service: nltkwithserverless

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.7
  lambdaHashingVersion: 20201221
  region: us-east-2
  timeout: 900
  memorySize: 128
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
        - "lambda:*"
      Resource: "*"
  environment:
    NLTK_DATA: /opt/nltk_data
    KEY: "logistic_model.pkl"
    BUCKET: "akanksha-twitter-model"
  package:
    exclude:
      - nltk/**

functions:
  lambda_function:
    handler: handler.lambda_function
    events:
      - s3:
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .csv
    layers:
      - { Ref: NltkLambdaLayer }

custom:
  bucket: s3-akanksha-bucket-for-lambda-example1
  pythonRequirements:
    dockerizePip: true

layers:
  nltk:
    path: nltk
    name: NltkData # optional, Deployed Lambda layer name
    description: Nltk corpus data # optional, Description to publish to AWS
    compatibleRuntimes: # optional, a list of runtimes this layer is compatible with
      - python3.7
    licenseInfo: GPLv3 # optional, a string specifying license information
    allowedAccounts: # optional, a list of AWS account IDs allowed to access this layer.
      - '*'
    retain: false # optional, false by default. If true, layer versions are not deleted as new ones are created

    layers:
      - { Ref: NltkLambdaLayer }

plugins:
  - serverless-python-requirements

package:
  exclude:
    - nltk/**